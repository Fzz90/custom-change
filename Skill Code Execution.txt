// Define variables for testing
const minLevel = 0;
const maxLevel = 8;
const initialValue = 298; // updated example value
const initialCost = 90; // updated example cost

for (let level = minLevel; level <= maxLevel; level++) {
    // Calculate EXP Mastery Formula
    let expMastery;
    switch (true) {
        case (level == 0 || level == 1):
            expMastery = Math.round(level * 4.5 + 6);
            break;
        case (level >= 2 && level <= 4):
            expMastery = Math.round(level * 4.5 + 8);
            break;
        case (level >= 5 && level <= 7):
            expMastery = Math.round(level * 4.5 + 9);
            break;
        case (level >= 8):
            expMastery = Math.round(level * 4.5 + 10);
            break;
    }

    // Calculate Damage Mastery Formula
    let damageMastery;
    switch (true) {
        case (level == 0 || level == 1):
            damageMastery = Math.round(initialValue * (1.25 + level * 0.33));
            break;
        case (level >= 2 && level <= 4):
            damageMastery = Math.round(initialValue * (1.33 + level * 0.35));
            break;
        case (level >= 5 && level <= 7):
            damageMastery = Math.round(initialValue * (1.388 + level * 0.378));
            break;
        case (level >= 8):
            damageMastery = Math.round(initialValue * (1.5 + level * 0.4));
            break;
    }

    // Calculate MP Cost Mastery Formula
    let mpCostMastery;
    switch (true) {
        case (level == 0):
            mpCostMastery = 90;
            break;
        default:
            mpCostMastery = Math.round(initialCost * (1.1 + level * 0.14));
            break;
    }

    // Output the results for each level
    console.log(`Level: ${level}`);
    console.log(`  EXP Mastery: ${expMastery}`);
    console.log(`  Damage Mastery: ${damageMastery}`);
    console.log(`  MP Cost Mastery: ${mpCostMastery}`);
    console.log('--------------------------');
}



// ------------------------------------------------ SKILL NOTETAGS ------------------------------------------------  //

// Level 0 - 3 (Biasa)
<Custom EXP Mastery Formula: Math.ceil(level * 5 + 5.4)>
<Custom Damage Mastery Formula: Math.ceil(value * (1.5 + level * 0.35))>
<Custom MP Cost Mastery Formula: level == 0 ? 30 : Math.ceil(cost * (1.15 + level * 0.15))>

// Level 4 - 6 (Bronze)
<Custom EXP Mastery Formula: Math.ceil(level > 3 && level <= 6 ? level * 5 + 5.8 : level * 5 + 5.4)>
<Custom Damage Mastery Formula: Math.ceil(level > 3 && level <= 6 ? value * (1.555 + level * 0.4) : value * (1.5 + level * 0.35))>

// Level 7 - 9 (Silver)
<Custom EXP Mastery Formula: Math.ceil(level > 6 && level <= 9 ? level * 5 + 6.5 : level * 5 + 5.4)>
<Custom Damage Mastery Formula: Math.ceil(level > 6 && level <= 9 ? value * (1.6 + level * 0.42) : value * (1.5 + level * 0.35))>

// Level 10 (Gold)
<Custom EXP Mastery Formula: Math.ceil(level > 9 ? level * 5 + 8 : level * 5 + 5.4)>
<Custom Damage Mastery Formula: Math.ceil(level > 9 ? value * (1.65 + level * 0.45) : value * (1.5 + level * 0.35))>


<After Eval>
// If Bronze
if (user.skillMasteryLevel(item.id) > 1 && user.skillMasteryLevel(item.id) <= 4) {
    $dataSkills[item.id].iconIndex = 920;
}
// If Silver
else if (user.skillMasteryLevel(item.id) > 4 && user.skillMasteryLevel(item.id) <= 7) {
    $dataSkills[item.id].iconIndex = 919;
} 
// If Gold
else if(user.skillMasteryLevel(item.id) > 7) {
    $dataSkills[item.id].iconIndex = 918;
}
</After Eval>

// =========MASTERY LEVEL=========//

// ------------------------------------------------ SKILL NOTETAGS ------------------------------------------------  //
